{"version":3,"file":"static/js/532.36261af8.chunk.js","mappings":"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","sources":["components/Board/BoardStyle/ThreePowerForm.jsx","components/Board/BoardFetchItems.jsx","assets/images/board_prev.svg","components/Slider/SliderCore/SliderButton.jsx","components/Slider/SliderCore/SliderSingleItem.jsx","components/Slider/SliderCore/SliderSingleMain.jsx","utils/Title/Title.jsx"],"sourcesContent":["import {\r\n  BoardDiv,\r\n  BoardVideoOne,\r\n  BoardVideoDiv,\r\n  BoardVideoTwo,\r\n  BoardVideoThree,\r\n  BoardTextDiv,\r\n  BoardText,\r\n  BoardDivBottom,\r\n  SeparataDivLeft,\r\n  BoardDivIcon,\r\n  BoardDivWrite,\r\n  SeparataSpan,\r\n  SeparataDiv,\r\n  SeparataItem,\r\n} from \"./BoardStyle\";\r\nimport NewIcon from \"../../../assets/images/badge_new.svg\";\r\nimport EyeIcon from \"../../../assets/images/common_view_16.svg\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TiemIcon from \"../../../assets/icons/free-icon-calendar-2838779.png\";\r\n\r\nexport default function ThreePowerForm({\r\n  id,\r\n  title,\r\n  createdDate,\r\n  nickname,\r\n  view,\r\n  urls,\r\n}) {\r\n  const [nowday, setNowDay] = useState([]);\r\n  function getToday() {\r\n    var date = new Date();\r\n    var year = date.getFullYear();\r\n    var month = (\"0\" + (1 + date.getMonth())).slice(-2);\r\n    var day = (\"0\" + date.getDate()).slice(-2);\r\n    const dayList = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      dayList.push(\r\n        `${year}-${month}-${day - i < 10 ? \"0\" + (day - i) : day - i}`\r\n      );\r\n    }\r\n    setNowDay(dayList);\r\n  }\r\n  useEffect(getToday, []);\r\n\r\n  return (\r\n    <BoardDiv>\r\n      <ReseponseDiv>\r\n        <BoardVideoOne autoplay>\r\n          <source src={urls[0]} type=\"video/mp4\" />\r\n        </BoardVideoOne>\r\n        <BoardVideoDiv>\r\n          <BoardVideoTwo autoplay>\r\n            <source src={urls[1]} type=\"video/mp4\" />\r\n          </BoardVideoTwo>\r\n          <BoardVideoThree autoplay>\r\n            <source src={urls[2]} type=\"video/mp4\" />\r\n          </BoardVideoThree>\r\n        </BoardVideoDiv>\r\n      </ReseponseDiv>\r\n      <ReseponseDiv>\r\n        <BoardTextDiv>\r\n          <BoardText>\r\n            {title.length > 15 ? `${title.slice(0, 15)}...` : title}\r\n          </BoardText>\r\n          {nowday.includes(`${createdDate.slice(0, 10)}`) && (\r\n            <img src={NewIcon} style={{ margin: \"0px 5px\" }} alt=\"newicon\" />\r\n          )}\r\n        </BoardTextDiv>\r\n        <BoardDivBottom>\r\n          <SeparataDivLeft>\r\n            <BoardDivIcon />\r\n            <BoardDivWrite>\r\n              {nickname.length > 5 ? `${nickname.slice(0, 5)}...` : nickname}\r\n            </BoardDivWrite>\r\n          </SeparataDivLeft>\r\n          <SeparataDiv>\r\n            <SeparataItem>\r\n              <img src={EyeIcon} alt=\"eyeicon\" />\r\n              <SeparataSpan>{view}</SeparataSpan>\r\n            </SeparataItem>\r\n            <SeparataItem>\r\n              <img\r\n                src={TiemIcon}\r\n                alt=\"tiemicon\"\r\n                style={{ widh: \"18px\", height: \"18px\" }}\r\n              />\r\n              <SeparataSpan>{createdDate.slice(0, 10)}</SeparataSpan>\r\n            </SeparataItem>\r\n          </SeparataDiv>\r\n        </BoardDivBottom>\r\n      </ReseponseDiv>\r\n    </BoardDiv>\r\n  );\r\n}\r\n\r\nconst ReseponseDiv = styled.div`\r\n  @media screen and (max-width: 600px) {\r\n    width: 45%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport BoardItemBox from \"./BoardStyle/ThreePowerForm\";\r\nimport BoardForm from \"./BoardStyle/BoardForm\";\r\nimport LoadingSpinner from \"../Loding/LoadingSpinner\";\r\n\r\nexport default function BoardFetchItems({ category = \"\", center }) {\r\n  const { pathname } = useLocation();\r\n  const [itemList, setItemList] = useState([]);\r\n  const [page, setPage] = useState(0); //현재 페이지\r\n  const target = useRef();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const onIntersect = async ([entry], observer) => {\r\n    if (entry.isIntersecting) {\r\n      observer.unobserve(entry.target);\r\n      setPage((page) => page + 1); //페이지 증가\r\n    }\r\n  };\r\n\r\n  let categoryPath = \"\";\r\n\r\n  if (category === \"user\") {\r\n    categoryPath = `${category}/post`;\r\n  } else {\r\n    categoryPath = `${category}`;\r\n  }\r\n\r\n  const getRequest = async (page) => {\r\n    setIsLoading(true);\r\n    return axios\r\n      .get(\r\n        `/api/${categoryPath}?page=${page}&size=${process.env.REACT_APP_PAGE_SIZE}`\r\n      )\r\n      .then(({ data }) => data.data);\r\n  };\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(onIntersect, {\r\n      threshold: 0.5,\r\n    });\r\n    getRequest(page).then((items) => {\r\n      if (items.length > 0) {\r\n        setItemList((prevItems) => [...prevItems, ...items]);\r\n        observer.observe(target.current); // 타겟 엘리먼트 지정\r\n      }\r\n    });\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [page, category]);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <BoardItemList>\r\n          {itemList.map(\r\n            ({\r\n              postId,\r\n              title,\r\n              createdDate,\r\n              nickname,\r\n              view,\r\n              urls,\r\n              postCategory,\r\n            }) => (\r\n              <Link\r\n                key={`${categoryPath}${postId}`}\r\n                to={\r\n                  category === \"user\"\r\n                    ? `/${postCategory}/${postId}`\r\n                    : `./${\r\n                        category === pathname.slice(1) ? \".\" : category\r\n                      }/${postId}`\r\n                }\r\n              >\r\n                <li>\r\n                  {(category === \"threepowerpost\") |\r\n                  (pathname === \"threepowerpost\") ? (\r\n                    <BoardItemBox\r\n                      id={postId}\r\n                      title={title}\r\n                      createdDate={createdDate}\r\n                      nickname={nickname}\r\n                      view={view}\r\n                      urls={urls}\r\n                    />\r\n                  ) : (\r\n                    <BoardForm\r\n                      id={postId}\r\n                      title={title}\r\n                      createdDate={createdDate}\r\n                      nickname={nickname}\r\n                      view={view}\r\n                      urls={urls}\r\n                    />\r\n                  )}\r\n                </li>\r\n              </Link>\r\n            )\r\n          )}\r\n          <div ref={target} style={{ width: \"100%\" }} />\r\n        </BoardItemList>\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst BoardItemList = styled.ul`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  grid-column-gap: 32px;\r\n  grid-row-gap: 28px;\r\n  justify-content: center;\r\n`;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBoardPrev(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L7 7L1 13\",\n    stroke: \"#222222\",\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBoardPrev);\nexport default __webpack_public_path__ + \"static/media/board_prev.2cd642d734dacc92259b33da92997b91.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from \"styled-components\";\r\nimport ArrowIcon from \"../../../assets/images/board_prev.svg\";\r\n\r\nexport default function SliderButton({ direction, onClick, categories }) {\r\n  return (\r\n    <BtnSlideControl\r\n      onClick={onClick}\r\n      direction={direction ? 1 : 0}\r\n      categories={categories}\r\n    >\r\n      <img src={ArrowIcon} alt=\"슬라이드버튼\"></img>\r\n    </BtnSlideControl>\r\n  );\r\n}\r\n\r\nconst BtnSlideControl = styled.button`\r\n  position: absolute;\r\n  top: calc(50% - 30px);\r\n  z-index: 1;\r\n  background-color: white;\r\n  width: 30px;\r\n  height: 60px;\r\n  opacity: 0.5;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  ${(props) =>\r\n    props.direction\r\n      ? css`\r\n          transform: rotate(180deg);\r\n          left: 1rem;\r\n        `\r\n      : css`\r\n          right: 1rem;\r\n        `};\r\n\r\n  ${(props) =>\r\n    props.categories === \"home\"\r\n      ? css`\r\n          padding: 20px 4px;\r\n          height: 60px;\r\n          border-radius: 15px;\r\n        `\r\n      : css`\r\n          padding: 0;\r\n          height: 30px;\r\n          border-radius: 50%;\r\n          top: 50%;\r\n        `};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default function SliderSingleItem({ item, style, categories }) {\r\n  const slectSlide = {\r\n    home: <HomeItem item={item} categories={categories} />,\r\n    threepowerpost: <YoutubeItem item={item} />,\r\n    exercisepost: <CommercialItem item={item} />,\r\n    freepost: <CommercialItem item={item} />,\r\n  };\r\n\r\n  return (\r\n    <SliderItemInner style={style}>{slectSlide[categories]}</SliderItemInner>\r\n  );\r\n}\r\n\r\nfunction HomeItem({ item }) {\r\n  return (\r\n    <>\r\n      <a href=\"/\">\r\n        <ItemImg src={item} alt=\"\" />\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction YoutubeItem({ item }) {\r\n  const { link, subscription, text, title, thumbnail } = item;\r\n\r\n  return (\r\n    <ItemInnerWrapper>\r\n      <InnerBox>\r\n        <a href={link}>\r\n          <InnderBoxTop>\r\n            <ThumbnailImg src={thumbnail} alt=\"유튜브 이미지 썸네일\" />\r\n            <BoxTopInfo>\r\n              <YoutubeTitle>{title}</YoutubeTitle>\r\n              <YoutubeSubscription>{subscription}</YoutubeSubscription>\r\n            </BoxTopInfo>\r\n          </InnderBoxTop>\r\n          <DescText>{text}</DescText>\r\n        </a>\r\n      </InnerBox>\r\n    </ItemInnerWrapper>\r\n  );\r\n}\r\n\r\nfunction CommercialItem({ item }) {\r\n  const { link, subTitle, text, title } = item;\r\n\r\n  return (\r\n    <ItemInnerWrapper>\r\n      <InnerBox>\r\n        <a href={link}>\r\n          <TitleText>{title}</TitleText>\r\n          <SubText>{subTitle}</SubText>\r\n          <DescText>{text}</DescText>\r\n        </a>\r\n      </InnerBox>\r\n    </ItemInnerWrapper>\r\n  );\r\n}\r\n\r\nconst SliderItemInner = styled.li`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n`;\r\n\r\nconst ItemImg = styled.img`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  height: 450px;\r\n  /* object-fit: scale-down; */\r\n  @media screen and (max-width: 1440px) {\r\n    width: 1440px;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    width: 1000px;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 700px;\r\n  }\r\n`;\r\n\r\nconst ItemInnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ThumbnailImg = styled.img`\r\n  width: 68px;\r\n  height: 68px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst YoutubeTitle = styled.div`\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  line-height: 26px;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst YoutubeSubscription = styled.div`\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst DescText = styled.div`\r\n  width: 400px;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst InnderBoxTop = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst BoxTopInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 12px;\r\n`;\r\n\r\nconst InnerBox = styled.div`\r\n  width: 450px;\r\n  padding: 40px 60px;\r\n`;\r\n\r\nconst TitleText = styled.div`\r\n  font-weight: 700;\r\n  font-size: 36px;\r\n  line-height: 44px;\r\n  color: #ffffff;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SubText = styled.div`\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  line-height: 26px;\r\n  color: #ffffff;\r\n  margin-bottom: 8px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport SliderSingleItem from \"./SliderSingleItem\";\r\nimport SliderButton from \"./SliderButton\";\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nexport default function SliderSingleMain({ data, categories }) {\r\n  const [width, setWidth] = useState(0);\r\n  const [currentIndex, setCurrentIndex] = useState(0); //현재 슬라이드의 index를 저장\r\n\r\n  const handleSwipe = (direction) => {\r\n    setCurrentIndex((prev) => prev + direction);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWidth(ref.current.clientWidth);\r\n    };\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const isOver = (idx) =>\r\n    idx < 0 ? 0 : idx >= data.length ? data.length - 1 : idx;\r\n\r\n  useEffect(() => {\r\n    // setInterval 삽입하여 2초마다 setCurrentIndex 실행\r\n    const timer = setInterval(() => {\r\n      setCurrentIndex((prev) => prev + 1);\r\n    }, 2000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [currentIndex]);\r\n\r\n  const ref = useRef();\r\n  const idx = Math.floor(currentIndex % data.length);\r\n  const startSlides = [3, 2, 1] //보여줘야할 currrentIndex보다 얼마나 멀리 떨어져 있는 지 나타냄\r\n    .map((num) => {\r\n      const nextIdx = idx >= 0 ? idx - num : data.length + idx - num;\r\n      if (nextIdx < 0) {\r\n        return data.length - Math.abs(nextIdx);\r\n      }\r\n      return nextIdx;\r\n    })\r\n    .map((num) => data[isOver(num)]);\r\n\r\n  const endSlides = [1, 2, 3]\r\n    .map((num) => {\r\n      const nextIdx = idx >= 0 ? idx + num : data.length + idx + num;\r\n      if (nextIdx < data.length) {\r\n        return nextIdx < 0 ? 0 : nextIdx;\r\n      }\r\n      return Math.abs(data.length - nextIdx);\r\n    })\r\n    .map((num) => data[isOver(num)]);\r\n\r\n  return (\r\n    <SliderArea ref={ref}>\r\n      <Slider className=\"slider\">\r\n        <SliderButton\r\n          direction={true}\r\n          onClick={() => handleSwipe(-1)}\r\n          categories={categories}\r\n        />\r\n        <SliderButton\r\n          direction={false}\r\n          onClick={() => handleSwipe(1)}\r\n          categories={categories}\r\n        />\r\n        <SliderLists\r\n          categories={categories}\r\n          className=\"slider-list\"\r\n          style={{\r\n            transform: `translate3d(${-currentIndex * width}px, 0px, 0px)`,\r\n            transition: \"all ease 0.4s\",\r\n          }}\r\n        >\r\n          {startSlides.map((item, idx) => (\r\n            <SliderSingleItem\r\n              key={currentIndex - 3 + idx}\r\n              item={item}\r\n              style={{\r\n                width,\r\n                left: (currentIndex - 3 + idx) * width,\r\n              }}\r\n              categories={categories}\r\n            ></SliderSingleItem>\r\n          ))}\r\n          <SliderSingleItem\r\n            key={currentIndex}\r\n            item={data[idx >= 0 ? idx : data.length + idx]}\r\n            style={{\r\n              width,\r\n              left: currentIndex * width,\r\n            }}\r\n            categories={categories}\r\n          ></SliderSingleItem>\r\n          {endSlides.map((item, idx) => (\r\n            <SliderSingleItem\r\n              key={currentIndex + idx + 1}\r\n              item={item}\r\n              style={{\r\n                width,\r\n                left: (currentIndex + idx + 1) * width,\r\n              }}\r\n              categories={categories}\r\n            ></SliderSingleItem>\r\n          ))}\r\n        </SliderLists>\r\n\r\n        <SliderPagenation>\r\n          <SliderPagenationList>\r\n            {data.map((item, num) => {\r\n              const target = idx >= 0 ? idx : data.length + idx; //음수일 때는, 데이터 랭스에서 더함-> 음순니까 빼기된다.\r\n              return (\r\n                <SliderPageButton\r\n                  key={num}\r\n                  onClick={() => {\r\n                    setCurrentIndex(currentIndex - (target - num));\r\n                  }}\r\n                  className={num === target ? \"active\" : \"\"}\r\n                  isActive={num === target}\r\n                />\r\n              );\r\n            })}\r\n          </SliderPagenationList>\r\n        </SliderPagenation>\r\n      </Slider>\r\n    </SliderArea>\r\n  );\r\n}\r\n\r\nconst SliderArea = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SliderLists = styled.ul`\r\n  position: relative;\r\n  display: flex;\r\n  list-style: none;\r\n  padding: 0px;\r\n  height: 450px;\r\n  height: ${(props) => (props.categories ? \"450px\" : \"225px\")};\r\n`;\r\n\r\nconst SliderPagenation = styled.ul`\r\n  position: absolute;\r\n  top: auto;\r\n  right: auto;\r\n  bottom: 16px;\r\n  left: 0;\r\n  display: block;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  text-align: center;\r\n`;\r\n\r\nconst SliderPagenationList = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  vertical-align: top;\r\n`;\r\n\r\nconst SliderPageButton = styled.button`\r\n  border: 0;\r\n  display: block;\r\n  width: 8px;\r\n  height: 8px;\r\n  color: transparent;\r\n  border-radius: 4px;\r\n  background: #fff;\r\n  font-size: 0;\r\n  opacity: 0.8;\r\n  -webkit-transition: all 0.3s ease;\r\n  -o-transition: all 0.3s ease;\r\n  transition: all 0.3s ease;\r\n  margin: 0 0 0 12px;\r\n\r\n  ${(props) =>\r\n    props.isActive &&\r\n    css`\r\n      width: 36px;\r\n      opacity: 1;\r\n    `};\r\n`;\r\n","import { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\nfunction Title({name}){\r\n    return (\r\n            <HelmetProvider>\r\n                <Helmet>\r\n                    <title>Health | {name}</title>\r\n                </Helmet>\r\n            </HelmetProvider>\r\n    )\r\n}\r\n\r\nexport default Title"],"names":["ThreePowerForm","id","title","createdDate","nickname","view","urls","useState","nowday","setNowDay","useEffect","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","dayList","i","push","ReseponseDiv","autoplay","src","type","length","includes","NewIcon","style","margin","alt","EyeIcon","TiemIcon","widh","height","styled","BoardFetchItems","category","pathname","center","useLocation","itemList","setItemList","page","setPage","target","useRef","isLoading","setIsLoading","onIntersect","observer","entry","isIntersecting","unobserve","categoryPath","getRequest","axios","process","then","data","IntersectionObserver","threshold","items","prevItems","observe","current","disconnect","BoardItemList","map","postId","postCategory","to","BoardForm","ref","width","LoadingSpinner","SliderButton","direction","onClick","categories","BtnSlideControl","ArrowIcon","props","css","SliderSingleItem","item","slectSlide","home","HomeItem","threepowerpost","YoutubeItem","exercisepost","CommercialItem","freepost","SliderItemInner","href","ItemImg","link","subscription","text","thumbnail","ItemInnerWrapper","InnerBox","InnderBoxTop","ThumbnailImg","BoxTopInfo","YoutubeTitle","YoutubeSubscription","DescText","subTitle","TitleText","SubText","SliderSingleMain","setWidth","currentIndex","setCurrentIndex","handleSwipe","prev","handleResize","clientWidth","window","addEventListener","removeEventListener","isOver","idx","timer","setInterval","clearInterval","Math","floor","startSlides","num","nextIdx","abs","endSlides","SliderArea","Slider","className","SliderLists","transform","transition","left","SliderPagenation","SliderPagenationList","SliderPageButton","isActive","name"],"sourceRoot":""}