{"version":3,"file":"static/js/670.bb4cfe09.chunk.js","mappings":"sSACaA,EAAcC,EAAAA,GAAAA,IAAH,gJASXC,EAAiBD,EAAAA,GAAAA,MAAH,0PAedE,EAAYF,EAAAA,GAAAA,MAAH,8SAeTG,EAAWH,EAAAA,GAAAA,IAAH,kEAKRI,EAAaJ,EAAAA,GAAAA,IAAH,mMAUVK,EAAUL,EAAAA,GAAAA,OAAH,oS,yLC5CL,SAASM,IACtB,IAAIC,GAAWC,EAAAA,EAAAA,MACPC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,EAAG,cAAUF,GACnB,GAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAxBK,GAAT,eACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KACA,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,MAKAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,yCAAG,gGAChBJ,GAAa,GADG,SAEKK,IAAMb,GAFX,OAEVc,EAFU,OAGhBR,EAAYQ,EAAOC,KAAKA,MACxBZ,EAASW,EAAOC,KAAKA,KAAKb,OAC1BG,EAAeS,EAAOC,KAAKA,KAAKC,SAChCR,GAAa,GANG,2CAAH,qDAQfI,MACC,CAACZ,IAmCJ,OACE,iCACE,SAAC,IAAD,IACCO,EAAYE,GACX,SAAC,KAAD,WACE,kBAAMQ,SAvCO,SAACC,GACpBA,EAAEC,iBACF,IAAIC,EAAYF,EAAEG,OAAOC,MAAMC,MAAM,GACjCC,EAAWN,EAAEG,OAAOI,KAAKF,MAAM,GAC/BG,EAAYR,EAAEG,OAAOM,MAAMJ,MAAM,GAC/BK,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAS5B,GACzB0B,EAASE,OAAO,UAAW1B,GAC3BwB,EAASE,OAAO,QAASV,GACzBQ,EAASE,OAAO,QAASJ,GACzBE,EAASE,OAAO,OAAQN,GAMxBd,GAAa,GACbG,IAAAA,KACQb,EAAK4B,EAPE,CACbG,QAAS,CACP,eAAgB,yBAMjBC,MAAK,SAACC,GACL,GAAwB,SAApBA,EAAIlB,KAAKmB,OAGX,OAFAxB,GAAa,QACbyB,MAAM,uIAGRvC,EAAS,sBAEVwC,OAAM,SAACC,GAAD,OACLF,MAAM,GAAD,OACAE,EAAMC,SAASJ,OADf,6GAWH,WACE,SAAC,KAAD,CACEK,GAAG,cACHC,YAAY,kEACZC,MAAavC,EACbwC,SA3DS,SAACxB,GACpBf,EAASe,EAAEG,OAAOoB,QA2DRE,aAAa,MACbC,UAAQ,KAEV,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,OAAO,aACvC,kBAAOF,KAAK,OAAOC,KAAK,QAAQC,OAAO,aACvC,kBAAOF,KAAK,OAAOC,KAAK,OAAOC,OAAO,aACtC,SAAC,IAAD,CAAQ1C,eAAgBA,EAAgBD,YAAaA,KACrD,mBAAQyC,KAAK,SAAb,2CAGFpC,GACF,SAAC,IAAD,CAAgBuC,KAAM,mEAEtB,SAAC,IAAD,S,0EC7EFC,EAAU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB,OAAKA,GAKH,gBAAKC,UAAU,UAAf,UACE,4BACE,mBACEN,KAAK,SACLO,QAAS,kBAAMF,EAAOG,QAAQC,QAAQC,aAAaC,OACnDL,UAAWD,EAAOO,SAAS,QAAU,YAAc,GAHrD,UAKE,SAAC,MAAD,OAEF,mBACEZ,KAAK,SACLO,QAAS,kBAAMF,EAAOG,QAAQC,QAAQI,eAAeF,OACrDL,UAAWD,EAAOO,SAAS,UAAY,YAAc,GAHvD,UAKE,SAAC,MAAD,OAEF,mBACEZ,KAAK,SACLO,QAAS,kBAAMF,EAAOG,QAAQC,QAAQK,kBAAkBH,OACxDL,UAAWD,EAAOO,SAAS,aAAe,YAAc,GAH1D,UAKE,SAAC,MAAD,OAEF,mBACEZ,KAAK,SACLO,QAAS,kBAAMF,EAAOG,QAAQC,QAAQM,eAAeJ,OACrDL,UAAWD,EAAOO,SAAS,UAAY,YAAc,GAHvD,UAKE,SAAC,MAAD,OAEF,mBACEZ,KAAK,SACLO,QAAS,kBACPF,EAAOG,QAAQC,QAAQO,cAAc,CAAEC,MAAO,IAAKN,OAErDL,UACED,EAAOO,SAAS,UAAW,CAAEK,MAAO,IAAO,YAAc,GAN7D,UASE,SAAC,MAAD,OAEF,mBACEjB,KAAK,SACLO,QAAS,kBACPF,EAAOG,QAAQC,QAAQO,cAAc,CAAEC,MAAO,IAAKN,OAErDL,UACED,EAAOO,SAAS,UAAW,CAAEK,MAAO,IAAO,YAAc,GAN7D,UASE,SAAC,MAAD,CAAWX,UAAU,gBAEvB,mBACEN,KAAK,SACLO,QAAS,kBAAMF,EAAOG,QAAQC,QAAQS,mBAAmBP,OACzDL,UAAWD,EAAOO,SAAS,cAAgB,YAAc,GAH3D,UAKE,SAAC,MAAD,OAEF,mBACEZ,KAAK,SACLO,QAAS,kBAAMF,EAAOG,QAAQC,QAAQU,oBAAoBR,OAC1DL,UAAWD,EAAOO,SAAS,eAAiB,YAAc,GAH5D,UAKE,SAAC,MAAD,OAEF,mBACEZ,KAAK,SACLO,QAAS,kBAAMF,EAAOG,QAAQC,QAAQW,mBAAmBT,OACzDL,UAAWD,EAAOO,SAAS,cAAgB,YAAc,GAH3D,UAKE,SAAC,MAAD,WA3EC,MAoGX,IAlBe,SAAC,GAAqC,IAAnCpD,EAAkC,EAAlCA,eAAgBD,EAAkB,EAAlBA,YAC1B8C,GAASgB,EAAAA,EAAAA,IAAU,CACvBC,WAAY,CAACC,EAAAA,EAAYC,EAAAA,GACzBrD,QAASZ,GAAe,GACxBkE,SAAU,YAAiB,IACnBC,EADkB,EAAbrB,OACSsB,UACpBnE,EAAekE,MAInB,OACE,iBAAKpB,UAAU,aAAf,WACE,SAACF,EAAD,CAASC,OAAQA,KACjB,SAAC,KAAD,CAAeA,OAAQA","sources":["components/Board/NewWrite/BoardWriteStyle.jsx","pages/ThreeBoardEditPost.jsx","utils/Editor/Tiptap.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nexport const PostWrapper = styled.div`\r\n  max-width: 1040px;\r\n  width: 1024px;\r\n  color: #333;\r\n  display: flex;\r\n  margin: 0 auto;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const PostTitleTitle = styled.input`\r\n  width: 100%;\r\n  height: 56px;\r\n  min-height: 56px;\r\n  border: none;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  border-bottom: 1px solid #eeeeee;\r\n  margin-bottom: 20px;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const PostLabel = styled.label`\r\n  border: 1px solid #0066ff;\r\n  border-radius: 60px;\r\n  color: #0066ff;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 30px;\r\n  font-size: 16px;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  font-family: \"Pretendard\";\r\n`;\r\n\r\nexport const FileList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FileBtnDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top: 1px solid #eeeeee;\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const FileBtn = styled.button`\r\n  width: 100px;\r\n  height: 50px;\r\n  border-radius: 40px;\r\n  margin: 0px 10px;\r\n  border: 1px solid #eeeeee;\r\n  background-color: transparent;\r\n  text-align: center;\r\n  font-family: \"Pretendard\";\r\n  :hover {\r\n    background-color: #0066ff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useLocation, useNavigate } from \"react-router\";\r\nimport Tiptap from \"../utils/Editor/Tiptap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Nav from \"../components/Navbar\";\r\nimport {\r\n  PostWrapper,\r\n  PostTitleTitle,\r\n} from \"../components/Board/NewWrite/BoardWriteStyle\";\r\nimport LoadingSpinner from \"components/Loding/LoadingSpinner\";\r\n\r\nexport default function ThreeBoardEditPost() {\r\n  let navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n  const url = `/api${pathname}`;\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [, setEditData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const result = await axios(url);\r\n      setEditData(result.data.data);\r\n      setTitle(result.data.data.title);\r\n      setDescription(result.data.data.content);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let benchFile = e.target.bench.files[0];\r\n    let deadFile = e.target.dead.files[0];\r\n    let squatFile = e.target.squat.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", description);\r\n    formData.append(\"bench\", benchFile);\r\n    formData.append(\"squat\", squatFile);\r\n    formData.append(\"dead\", deadFile);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    setIsPending(true);\r\n    axios\r\n      .post(url, formData, config)\r\n      .then((res) => {\r\n        if (res.data.status === \"0452\") {\r\n          setIsPending(false);\r\n          alert(\"3대력 게시글 수정은 동영상을 변경해주셔야합니다\");\r\n          return;\r\n        }\r\n        navigate(\"/threepowerpost\");\r\n      })\r\n      .catch((error) =>\r\n        alert(\r\n          `${error.response.status}번 error 입니다. 입력정보를 확인해주세요`\r\n        )\r\n      );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      {isLoading | isPending ? (\r\n        <PostWrapper>\r\n          <form onSubmit={handleSubmit}>\r\n            <PostTitleTitle\r\n              id=\"input-title\"\r\n              placeholder=\"글 제목을 입력해주세요!\"\r\n              value={\"\" || title}\r\n              onChange={handleChange}\r\n              autoComplete=\"off\"\r\n              required\r\n            />\r\n            <input type=\"file\" name=\"bench\" accept=\"video/*\" />\r\n            <input type=\"file\" name=\"squat\" accept=\"video/*\" />\r\n            <input type=\"file\" name=\"dead\" accept=\"video/*\" />\r\n            <Tiptap setDescription={setDescription} description={description} />\r\n            <button type=\"submit\">제출하기</button>\r\n          </form>\r\n        </PostWrapper>\r\n      ) : isPending ? (\r\n        <LoadingSpinner text={\"게시글 업로드중입니다\"} />\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useEditor, EditorContent } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport Underline from \"@tiptap/extension-underline\";\r\nimport {\r\n  FaBold,\r\n  FaHeading,\r\n  FaItalic,\r\n  FaListOl,\r\n  FaListUl,\r\n  FaQuoteLeft,\r\n  FaRedo,\r\n  FaStrikethrough,\r\n  FaUnderline,\r\n  FaUndo,\r\n} from \"react-icons/fa\";\r\n\r\nconst MenuBar = ({ editor }) => {\r\n  if (!editor) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"menuBar\">\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleBold().run()}\r\n          className={editor.isActive(\"bold\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaBold />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleItalic().run()}\r\n          className={editor.isActive(\"italic\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaItalic />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleUnderline().run()}\r\n          className={editor.isActive(\"underline\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaUnderline />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleStrike().run()}\r\n          className={editor.isActive(\"strike\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaStrikethrough />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() =>\r\n            editor.chain().focus().toggleHeading({ level: 2 }).run()\r\n          }\r\n          className={\r\n            editor.isActive(\"heading\", { level: 2 }) ? \"is_active\" : \"\"\r\n          }\r\n        >\r\n          <FaHeading />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() =>\r\n            editor.chain().focus().toggleHeading({ level: 3 }).run()\r\n          }\r\n          className={\r\n            editor.isActive(\"heading\", { level: 3 }) ? \"is_active\" : \"\"\r\n          }\r\n        >\r\n          <FaHeading className=\"heading3\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleBulletList().run()}\r\n          className={editor.isActive(\"bulletList\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaListUl />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleOrderedList().run()}\r\n          className={editor.isActive(\"orderedList\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaListOl />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleBlockquote().run()}\r\n          className={editor.isActive(\"blockquote\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaQuoteLeft />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tiptap = ({ setDescription, description }) => {\r\n  const editor = useEditor({\r\n    extensions: [StarterKit, Underline],\r\n    content: description || \"\",\r\n    onUpdate: ({ editor }) => {\r\n      const html = editor.getHTML();\r\n      setDescription(html);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"textEditor\">\r\n      <MenuBar editor={editor} />\r\n      <EditorContent editor={editor} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tiptap;\r\n"],"names":["PostWrapper","styled","PostTitleTitle","PostLabel","FileList","FileBtnDiv","FileBtn","ThreeBoardEditPost","navigate","useNavigate","pathname","useLocation","url","useState","title","setTitle","description","setDescription","setEditData","isLoading","setIsLoading","isPending","setIsPending","useEffect","fetchData","axios","result","data","content","onSubmit","e","preventDefault","benchFile","target","bench","files","deadFile","dead","squatFile","squat","formData","FormData","append","headers","then","res","status","alert","catch","error","response","id","placeholder","value","onChange","autoComplete","required","type","name","accept","text","MenuBar","editor","className","onClick","chain","focus","toggleBold","run","isActive","toggleItalic","toggleUnderline","toggleStrike","toggleHeading","level","toggleBulletList","toggleOrderedList","toggleBlockquote","useEditor","extensions","StarterKit","Underline","onUpdate","html","getHTML"],"sourceRoot":""}