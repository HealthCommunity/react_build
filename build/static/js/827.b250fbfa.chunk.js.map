{"version":3,"file":"static/js/827.b250fbfa.chunk.js","mappings":"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","sources":["assets/images/board_write_picture_24.svg","components/Board/NewWrite/BoardWriteStyle.jsx","pages/BoardEditPost.jsx","styles/Layout/Layout.jsx","utils/Editor/Tiptap.jsx"],"sourcesContent":["var _rect, _circle, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBoardWritePicture24(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 2,\n    width: 20,\n    height: 20,\n    rx: 2,\n    stroke: \"#0066FF\",\n    strokeWidth: 1.5\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 17,\n    cy: 7,\n    r: 0.5,\n    fill: \"#0066FF\",\n    stroke: \"#0066FF\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 16L10 12L14 16L18 12\",\n    stroke: \"#0066FF\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBoardWritePicture24);\nexport default __webpack_public_path__ + \"static/media/board_write_picture_24.877cbbba3b7052eb8cc7bf98d072d000.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\nexport const PostWrapper = styled.div`\r\n  max-width: 1040px;\r\n  width: 1024px;\r\n  color: #333;\r\n  display: flex;\r\n  margin: 0 auto;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const PostTitleTitle = styled.input`\r\n  width: 100%;\r\n  height: 56px;\r\n  min-height: 56px;\r\n  border: none;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  border-bottom: 1px solid #eeeeee;\r\n  margin-bottom: 20px;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const PostLabel = styled.label`\r\n  border: 1px solid #0066ff;\r\n  border-radius: 60px;\r\n  color: #0066ff;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 30px;\r\n  font-size: 16px;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  font-family: \"Pretendard\";\r\n`;\r\n\r\nexport const FileList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FileBtnDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top: 1px solid #eeeeee;\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const FileBtn = styled.button`\r\n  width: 100px;\r\n  height: 50px;\r\n  border-radius: 40px;\r\n  margin: 0px 10px;\r\n  border: 1px solid #eeeeee;\r\n  background-color: transparent;\r\n  text-align: center;\r\n  font-family: \"Pretendard\";\r\n  :hover {\r\n    background-color: #0066ff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useLocation, useNavigate } from \"react-router\";\r\nimport Tiptap from \"../utils/Editor/Tiptap\";\r\nimport \"../utils/Editor/TiptapStyle.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Nav from \"../components/Navbar/index\";\r\nimport {\r\n  FileBtn,\r\n  FileBtnDiv,\r\n  FileList,\r\n  PostLabel,\r\n  PostWrapper,\r\n  PostTitleTitle,\r\n} from \"../components/Board/NewWrite/BoardWriteStyle\";\r\nimport FileAdd from \"../assets/images/board_write_picture_24.svg\";\r\nimport LoadingSpinner from \"components/Loding/LoadingSpinner\";\r\nimport { WidthAreaSpace } from \"../styles/Layout/Layout\";\r\n\r\nexport default function BoardEditPost() {\r\n  let navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n  const boardname = pathname.split(\"/\")[1];\r\n  const url = `/api${pathname}`;\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [, setEditData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [file, setFile] = useState([]);\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const goList = () => {\r\n    navigate(`/${boardname}`);\r\n  };\r\n  const changeInputFile = (e) => {\r\n    const fileArr = e.target.files;\r\n    const filelist = [];\r\n    for (let i = 0; i < fileArr.length; i++) {\r\n      if (fileArr.length > 5) return;\r\n      filelist.push(fileArr[i]);\r\n    }\r\n    setFile(filelist);\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const result = await axios(url);\r\n      setEditData(result.data.data);\r\n      setTitle(result.data.data.title);\r\n      setDescription(result.data.data.content);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    let files = e.target.inputfile.files;\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", description);\r\n    for (let i = 0; i < files.length; i++) {\r\n      formData.append(\"files\", files[i]);\r\n    }\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    setIsPending(true);\r\n    axios\r\n      .post(url, formData, config)\r\n      .then(() => {\r\n        navigate(`/${pathname.split(\"/\")[1]}`);\r\n      })\r\n      .catch((error) =>\r\n        alert(\r\n          `${error.response.status}번 error 입니다. 입력  정보를 확인해주세요`\r\n        )\r\n      );\r\n  };\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <WidthAreaSpace>\r\n        {isLoading | isPending ? (\r\n          <PostWrapper>\r\n            <form onSubmit={handleSubmit}>\r\n              <PostTitleTitle\r\n                id=\"input-title\"\r\n                placeholder=\"글 제목을 입력해주세요!\"\r\n                value={\"\" || title}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n              />\r\n              <Tiptap\r\n                setDescription={setDescription}\r\n                description={description}\r\n              />\r\n              <FileList>\r\n                <PostLabel>\r\n                  <img\r\n                    src={FileAdd}\r\n                    style={{ marginRight: \"5px\" }}\r\n                    alt=\"fileAdd\"\r\n                  />\r\n                  파일 첨부\r\n                  {boardname === \"exercisepost\" ? (\r\n                    <input\r\n                      type=\"file\"\r\n                      multiple\r\n                      name=\"inputfile\"\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      onChange={changeInputFile}\r\n                    />\r\n                  ) : (\r\n                    <input\r\n                      type=\"file\"\r\n                      multiple\r\n                      name=\"inputfile\"\r\n                      accept=\"video/* , image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      onChange={changeInputFile}\r\n                    />\r\n                  )}\r\n                  <span style={{ color: \"red\" }}>\r\n                    (파일변경시 기존 파일은 삭제됩니다)\r\n                  </span>\r\n                </PostLabel>\r\n                {file.map((x) => (\r\n                  <span\r\n                    key={x.name}\r\n                    style={{ margin: \"0px 10px\" }}\r\n                  >{` ${x.name} `}</span>\r\n                ))}\r\n              </FileList>\r\n              <FileBtnDiv>\r\n                <FileBtn type=\"button\" onClick={goList}>\r\n                  취소\r\n                </FileBtn>\r\n                <FileBtn\r\n                  type=\"submit\"\r\n                  style={{ color: \"white\", backgroundColor: \"#0066FF\" }}\r\n                >\r\n                  제출하기\r\n                </FileBtn>\r\n              </FileBtnDiv>\r\n            </form>\r\n          </PostWrapper>\r\n        ) : isPending ? (\r\n          <LoadingSpinner text={\"게시글 업로드중입니다\"} />\r\n        ) : (\r\n          <LoadingSpinner />\r\n        )}\r\n      </WidthAreaSpace>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\n/*네비게이션*/\r\nexport const Nav = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: 84px;\r\n  background: #222222;\r\n`;\r\n\r\n/*네비게이션 아래 부분 콘텐츠 영역*/\r\nexport const CommonContainer = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport const CommonContentsHome = styled.div`\r\n  display: flex; /*홈화면 2단 나누기*/\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 1500px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n/*홈화면 2단(왼쪽, 오른쪽 영역)*/\r\nexport const CommonContentsLeft = styled.div`\r\n  width: 75%;\r\n  @media screen and (max-width: 1900px) {\r\n    width: 70%;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    width: 65%;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const CommonContentsRight = styled.div`\r\n  width: 25%;\r\n  @media screen and (max-width: 1900px) {\r\n    width: 65%;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    width: 80%;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\n/*홈화면 메인 상단 슬라이드*/\r\nexport const MainSlide = styled.div`\r\n  box-sizing: border-box;\r\n  margin-top: 70px;\r\n  width: 100%;\r\n  height: 450px;\r\n  background: #222222;\r\n`;\r\n\r\n/*메인화면 공통*/\r\n/*홈화면, 카테고리 컨텐츠 타이틀*/\r\nexport const CommonTitleArea = styled.div`\r\n  width: 1100px;\r\n  margin: 30px auto;\r\n`;\r\n\r\nexport const CommonTitleTGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommonTitleText = styled.div`\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  letter-spacing: 1px;\r\n  white-space: nowrap;\r\n  font-family: \"GangwonEduPower\";\r\n`;\r\n\r\n/*홈화면 개별 컴포넌트의 중앙 정렬 틀*/\r\nexport const WidthAreaHome = styled.section`\r\n  width: 75%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  @media screen and (max-width: 1900px) {\r\n    width: 95%;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n/*(홈화면 제외)각 컴포넌트의 중앙 정렬 틀*/\r\nexport const WidthAreaSpace = styled.section`\r\n  width: 1400px;\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n  @media screen and (max-width: 1400px) {\r\n    width: 700px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  @media screen and (max-width: 700px) {\r\n    width: 500px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\n/*(홈화면 제외) 게시글 컴포넌트의 중앙 정렬 틀*/\r\nexport const WidthAreaInner = styled.div`\r\n  margin: 32px 2px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n","import { useEditor, EditorContent } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport Underline from \"@tiptap/extension-underline\";\r\nimport {\r\n  FaBold,\r\n  FaHeading,\r\n  FaItalic,\r\n  FaListOl,\r\n  FaListUl,\r\n  FaQuoteLeft,\r\n  FaRedo,\r\n  FaStrikethrough,\r\n  FaUnderline,\r\n  FaUndo,\r\n} from \"react-icons/fa\";\r\n\r\nconst MenuBar = ({ editor }) => {\r\n  if (!editor) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"menuBar\">\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleBold().run()}\r\n          className={editor.isActive(\"bold\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaBold />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleItalic().run()}\r\n          className={editor.isActive(\"italic\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaItalic />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleUnderline().run()}\r\n          className={editor.isActive(\"underline\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaUnderline />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleStrike().run()}\r\n          className={editor.isActive(\"strike\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaStrikethrough />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() =>\r\n            editor.chain().focus().toggleHeading({ level: 2 }).run()\r\n          }\r\n          className={\r\n            editor.isActive(\"heading\", { level: 2 }) ? \"is_active\" : \"\"\r\n          }\r\n        >\r\n          <FaHeading />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() =>\r\n            editor.chain().focus().toggleHeading({ level: 3 }).run()\r\n          }\r\n          className={\r\n            editor.isActive(\"heading\", { level: 3 }) ? \"is_active\" : \"\"\r\n          }\r\n        >\r\n          <FaHeading className=\"heading3\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleBulletList().run()}\r\n          className={editor.isActive(\"bulletList\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaListUl />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleOrderedList().run()}\r\n          className={editor.isActive(\"orderedList\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaListOl />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => editor.chain().focus().toggleBlockquote().run()}\r\n          className={editor.isActive(\"blockquote\") ? \"is_active\" : \"\"}\r\n        >\r\n          <FaQuoteLeft />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tiptap = ({ setDescription, description }) => {\r\n  const editor = useEditor({\r\n    extensions: [StarterKit, Underline],\r\n    content: description || \"\",\r\n    onUpdate: ({ editor }) => {\r\n      const html = editor.getHTML();\r\n      setDescription(html);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"textEditor\">\r\n      <MenuBar editor={editor} />\r\n      <EditorContent editor={editor} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tiptap;\r\n"],"names":["PostWrapper","styled","PostTitleTitle","PostLabel","FileList","FileBtnDiv","FileBtn","BoardEditPost","navigate","useNavigate","pathname","useLocation","boardname","split","url","useState","title","setTitle","description","setDescription","setEditData","isLoading","setIsLoading","isPending","setIsPending","file","setFile","changeInputFile","e","fileArr","target","files","filelist","i","length","push","useEffect","fetchData","axios","result","data","content","onSubmit","preventDefault","formData","FormData","inputfile","append","headers","then","catch","error","alert","response","status","id","placeholder","value","onChange","autoComplete","src","FileAdd","style","marginRight","alt","type","multiple","name","accept","display","color","map","x","margin","onClick","backgroundColor","text","CommonContainer","CommonContentsHome","CommonContentsLeft","CommonContentsRight","MainSlide","CommonTitleArea","CommonTitleTGroup","CommonTitleText","WidthAreaHome","WidthAreaSpace","WidthAreaInner","MenuBar","editor","className","chain","focus","toggleBold","run","isActive","toggleItalic","toggleUnderline","toggleStrike","toggleHeading","level","toggleBulletList","toggleOrderedList","toggleBlockquote","useEditor","extensions","StarterKit","Underline","onUpdate","html","getHTML"],"sourceRoot":""}